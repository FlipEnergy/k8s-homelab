# Override values for BotKube.

#  Formatting rules:
#
#  | Sign | Description                                                              |
#  |------|--------------------------------------------------------------------------|
#  | # -- | Comment is rendered into README.md.                                      |
#  | #    | Only if defined after '# --' signifies the continuation of the sentence. |
#  | ##   | Comment is ignored during README.md rendering.                           |
#
#  Read more at https://github.com/norwoodj/helm-docs

# -- Map of sources. Source contains configuration for Kubernetes events and sending recommendations.
# The property name under `sources` object is an alias for a given configuration. You can define multiple sources configuration with different names.
# Key name is used as a binding reference.
# @default -- See the `values.yaml` file for full object.
#
## Format: sources.<alias>
sources:
  k8s-events:
    # -- Describes Kubernetes source configuration.
    kubernetes:
      # -- Describes configuration for various recommendation insights.
      recommendations:
        # -- Recommendations for Pod Kubernetes resource.
        pod:
          # -- If true, notifies about Pod containers that use `latest` tag for images.
          noLatestImageTag: false
          # -- If true, notifies about Pod resources created without labels.
          labelsSet: true
        # -- Recommendations for Ingress Kubernetes resource.
        ingress:
          # -- If true, notifies about Ingress resources with invalid backend service reference.
          backendServiceValid: true
          # -- If true, notifies about Ingress resources with invalid TLS secret reference.
          tlsSecretValid: true

      # -- Describes namespaces for every Kubernetes resources you want to watch or exclude.
      # These namespaces are applied to every resource specified in the resources list.
      # However, every specified resource can override this by using its own namespaces object.
      namespaces:
        # Include contains a list of allowed Namespaces.
        # It can also contain a regex expressions:
        #  `- ".*"` - to specify all Namespaces.
        include:
          - ".*"
        # Exclude contains a list of Namespaces to be ignored even if allowed by Include.
        # It can also contain a regex expressions:
        #  `- "test-.*"` - to specif all Namespaces with `test-` prefix.
        # exclude: []

      # -- Describes the Kubernetes resources you want to watch.
      # @default -- Watch all built-in K8s kinds.
      resources:
        - name: v1/pods             # Name of the resource. Resource name must be in group/version/resource (G/V/R) format
                                    # resource name should be plural (e.g apps/v1/deployments, v1/pods)
        #  namespaces:             # Overrides 'source'.kubernetes.namespaces
        #    include:
        #      - ".*"
        #    exclude: []
          events:                   # List of lifecycle events you want to receive, e.g create, update, delete, error OR all
            - error
        - name: v1/services
          events:
            - create
            - delete
            - error
        - name: apps/v1/deployments
          events:
            - create
            - update
            - delete
            - error
          updateSetting:
            includeDiff: true
            fields:
              - spec.template.spec.containers[*].image
              - status.availableReplicas
        - name: apps/v1/statefulsets
          events:
            - create
            - update
            - delete
            - error
          updateSetting:
            includeDiff: true
            fields:
              - spec.template.spec.containers[*].image
              - status.readyReplicas
        - name: networking.k8s.io/v1/ingresses
          events:
            - create
            - delete
            - error
        - name: v1/nodes
          events:
            - create
            - delete
            - error
        - name: v1/namespaces
          events:
            - create
            - delete
            - error
        - name: v1/persistentvolumes
          events:
            - create
            - delete
            - error
        - name: v1/persistentvolumeclaims
          events:
            - create
            - delete
            - error
        - name: v1/configmaps
          events:
            - create
            - delete
            - error
        - name: apps/v1/daemonsets
          events:
            - create
            - update
            - delete
            - error
          updateSetting:
            includeDiff: true
            fields:
              - spec.template.spec.containers[*].image
              - status.numberReady
        - name: batch/v1/jobs
          events:
            - error
          updateSetting:
            includeDiff: true
            fields:
              - spec.template.spec.containers[*].image
              - status.conditions[*].type
        - name: rbac.authorization.k8s.io/v1/roles
          events:
            - create
            - delete
            - error
        - name: rbac.authorization.k8s.io/v1/rolebindings
          events:
            - create
            - delete
            - error
        - name: rbac.authorization.k8s.io/v1/clusterrolebindings
          events:
            - create
            - delete
            - error
        - name: rbac.authorization.k8s.io/v1/clusterroles
          events:
            - create
            - delete
            - error
       ## Custom resource example
       # - name: velero.io/v1/backups
       #   namespaces:l
       #     include:
       #       - ".*"
       #     exclude:
       #       -
       #   events:
       #     - create
       #     - update
       #     - delete
       #     - error
       #   updateSetting:
       #     includeDiff: true
       #     fields:
       #       - status.phase

# -- Map of executors. Executor contains configuration for running `kubectl` commands.
# The property name under `executors` is an alias for a given configuration. You can define multiple executor configurations with different names.
# Key name is used as a binding reference.
# @default -- See the `values.yaml` file for full object.
#
## Format: executors.<alias>
executors:
  kubectl-read-only:
    ## Kubectl executor configuration.
    kubectl:
      # -- If true, enables `kubectl` commands execution.
      enabled: true
      ## List of allowed `kubectl` commands.
      # -- Configures the default Namespace for executing BotKube `kubectl` commands. If not set, uses the 'default'.
      defaultNamespace: default
      # -- If true, enables commands execution from configured channel only.
      restrictAccess: true


# -- Map of communication groups. Communication group contains settings for multiple communication platforms.
# The property name under `communications` object is an alias for a given configuration group. You can define multiple communication groups with different names.
# @default -- See the `values.yaml` file for full object.
#
## Format: communications.<alias>
communications:
  default-group:
    ## Settings for Discord.
    discord:
      # -- If true, enables Discord bot.
      enabled: true
      # -- BotKube Bot Token.
      token: 'DISCORD_TOKEN'
      # -- BotKube Application Client ID.
      botID: 'DISCORD_BOT_ID'
      # -- Map of configured channels. The property name under `channels` object is an alias for a given configuration.
      #
      ## Format: channels.<alias>
      channels:
        default:
          # -- Discord channel ID for receiving BotKube alerts.
          # The BotKube user needs to be added to it.
          id: 'DISCORD_CHANNEL_ID'
          bindings:
            # -- Executors configuration for a given channel.
            executors:
              - kubectl-read-only
            # -- Notification sources configuration for a given channel.
            sources:
              - k8s-events
      notification:
        # -- Configures notification type that are sent. Possible values: `short`, `long`.
        type: short

## Global BotKube configuration.
settings:
  # -- Cluster name to differentiate incoming messages.
  clusterName: placeholder
  # -- If true, restarts the BotKube Pod on config changes.
  configWatcher: true
  # -- If true, notifies about new BotKube releases.
  upgradeNotifier: true
  ## BotKube logging settings.
  log:
    # -- Sets one of the log levels. Allowed values: `info`, `warn`, `debug`, `error`, `fatal`, `panic`.
    level: warning
    # -- If true, disable ANSI colors in logging.
    disableColors: false

# -- The BotKube Pod resource request and limits. We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube.
# [Ref docs](https://kubernetes.io/docs/user-guide/compute-resources/)
resources:
  limits:
   memory: 128Mi
  requests:
   cpu: 200m
   memory: 128Mi

# -- Role Based Access for BotKube Pod.
# [Ref doc](https://kubernetes.io/docs/admin/authorization/rbac/).
rbac:
  create: true
  rules:
    - apiGroups: ["*"]
      resources: ["*"]
      verbs: ["get", "watch", "list"]

## Parameters for anonymous analytics collection.
analytics:
  # -- If true, sending anonymous analytics is disabled. To learn what date we collect,
  # see [Privacy Policy](https://botkube.io/privacy#privacy-policy).
  disable: true
