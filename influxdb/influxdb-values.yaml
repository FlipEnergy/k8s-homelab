## influxdb image version
## ref: https://hub.docker.com/r/library/influxdb/tags/

serviceAccount:
  create: true

# Customize liveness, readiness and startup probes
# ref: https://docs.influxdata.com/influxdb/v1.7/tools/api/#ping-http-endpoint
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
#
livenessProbe:
  initialDelaySeconds: 45
  timeoutSeconds: 10

readinessProbe:
  initialDelaySeconds: 5
  timeoutSeconds: 5

service:
  ## Add annotations to service
  # annotations: {}
  type: ClusterIP
  # externalIPs: []
  # externalTrafficPolicy: ""

securityContext:
  runAsUser: 501
  runAsGroup: 501

## Persist data to a persistent volume
##
persistence:
  enabled: true
  # influxdb data Persistent Volume Storage Class
  # If defined, storageClassName: <storageClass>
  # If set to "-", storageClassName: "", which disables dynamic provisioning
  # If undefined (the default) or set to null, no storageClassName spec is
  #   set, choosing the default provisioner.  (gp2 on AWS, standard on
  #   GKE, AWS & OpenStack)
  #
  storageClass: influxdb
  annotations:
  accessMode: ReadWriteOnce
  size: 5Gi

## Deploy InfluxDB Enterprise - License required
## ref: https://www.influxdata.com/products/influxdb-enterprise/
enterprise:
  enabled: false

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
resources:
  limits:
    cpu: '2'
    memory: 6Gi
  requests:
    cpu: '1'
    memory: 3Gi

ingress:
  enabled: true
  tls: false
  # secretName: my-tls-cert # only needed if tls above is true
  hostname: influxdb.tgp
  annotations: {}
    # kubernetes.io/ingress.class: "nginx"
    # kubernetes.io/tls-acme: "true"
  path: /

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - postgresql
            - prometheus
        topologyKey: kubernetes.io/hostname

env:
  - name: INFLUXDB_DATA_MAX_VALUES_PER_TAG
    value: "0"

# Allow executing custom init scripts
#
# If the container finds any files with the extensions .sh or .iql inside of the
# /docker-entrypoint-initdb.d folder, it will execute them. The order they are
# executed in is determined by the shell. This is usually alphabetical order.
initScripts:
  enabled: true
  scripts:
    init_homelab.iql: |+
      CREATE DATABASE "homelab" WITH DURATION 30d REPLICATION 1 NAME "rp_30d"
    init_concourse.iql: |+
      CREATE DATABASE "concourse" WITH DURATION 7d REPLICATION 1 NAME "rp_7d"
