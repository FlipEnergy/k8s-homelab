# Override values for Nextcloud

## Official nextcloud image version
## ref: https://hub.docker.com/r/library/nextcloud/tags/
##
# image:
#   repository: nextcloud
#   tag: 25.0.4-apache

## Allowing use of ingress controllers
## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-homelab"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-body-size: 20G
    nginx.ingress.kubernetes.io/server-snippet: |-
      server_tokens off;
      proxy_hide_header X-Powered-By;

      rewrite ^/.well-known/webfinger /public.php?service=webfinger last;
      rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
      rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
      location = /.well-known/carddav {
        return 301 $scheme://$host/remote.php/dav;
      }
      location = /.well-known/caldav {
        return 301 $scheme://$host/remote.php/dav;
      }
      location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
      }
      location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
        deny all;
      }
      location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
        deny all;
      }
  tls:
    - secretName: nextcloud-tls
      hosts:
        - cloud.pleasenoddos.com

phpClientHttpsFix:
  enabled: true
  protocol: https

nextcloud:
  host: cloud.pleasenoddos.com
  containerPort: 8080

  mail:
    enabled: true
    fromAddress: dennis.zhang.nrg
    domain: gmail.com
    smtp:
      host: smtp.gmail.com
      secure: tls
      port: 587
      authtype: LOGIN

  # Extra mounts for the pods. Example shown is for connecting a legacy NFS volume
  # to NextCloud pods in Kubernetes. This can then be configured in External Storage
  extraVolumes:
    - name: apache-conf
      configMap:
        name: nextcloud-apache2-conf
  extraVolumeMounts:
    - name: apache-conf
      mountPath: /etc/apache2/ports.conf
      subPath: ports.conf
      readOnly: true
    - name: apache-conf
      mountPath: /etc/apache2/sites-enabled/000-default.conf
      subPath: 000-default.conf
      readOnly: true

  ##
  ## Extra environment variables
  extraEnv:
    - name: PHP_MEMORY_LIMIT
      value: 4G
    - name: PHP_UPLOAD_LIMIT
      value: 20G

internalDatabase:
  enabled: false

##
## External database configuration
##
externalDatabase:
  enabled: true
  ## Supported database engines: mysql or postgresql
  type: postgresql
  ## Database host
  host: postgresql.postgresql
  ## Database name
  database: nextcloud

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  # Nextcloud Data (/var/www/html)
  enabled: true
  annotations: {}
  # nextcloud data Persistent Volume Storage Class
  # If defined, storageClassName: <storageClass>
  # If set to "-", storageClassName: "", which disables dynamic provisioning
  # If undefined (the default) or set to null, no storageClassName spec is
  #   set, choosing the default provisioner.  (gp2 on AWS, standard on
  #   GKE, AWS & OpenStack)
  #
  storageClass: nextcloud-data

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  accessMode: ReadWriteOnce
  size: 3Ti

resources:
  limits:
    memory: 4Gi
  requests:
    cpu: 2
    memory: 2Gi

nodeSelector:
  kubernetes.io/arch: amd64
  performance: high

tolerations: []

affinity: {}

## Liveness and readiness probe values
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
livenessProbe:
  enabled: false
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 10
  failureThreshold: 6
  successThreshold: 1
readinessProbe:
  enabled: true
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 10
  failureThreshold: 10
  successThreshold: 1
startupProbe:
  enabled: false
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 60
  successThreshold: 1
