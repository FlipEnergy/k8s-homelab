# InfluxDB2 override values

## Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
              - postgresql
              - prometheus
        topologyKey: kubernetes.io/hostname

securityContext:
  runAsUser: 1000
  runAsGroup: 1000

## Extra environment variables to configure influxdb
## e.g.
# env:
#   - name: FOO
#     value: BAR
#   - name: BAZ
#     valueFrom:
#       secretKeyRef:
#         name: my-secret
#         key: my-key
env: {}

## Persist data to a persistent volume
##
persistence:
  enabled: true
  # If true will use an existing PVC instead of creating one
  useExisting: false
  # Name of existing PVC to be used in the influx deployment
  name: influxdb2
  # influxdb data Persistent Volume Storage Class
  # If defined, storageClassName: <storageClass>
  # If set to "-", storageClassName: "", which disables dynamic provisioning
  # If undefined (the default) or set to null, no storageClassName spec is
  #   set, choosing the default provisioner.  (gp2 on AWS, standard on
  #   GKE, AWS & OpenStack)
  #
  storageClass: influxdb2
  accessMode: ReadWriteOnce
  size: 10Gi

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
resources:
  limits:
    cpu: '2'
    memory: 6Gi
  requests:
    cpu: '1'
    memory: 3Gi

ingress:
  enabled: true
  tls: false
  # secretName: my-tls-cert # only needed if tls above is true
  hostname: influxdb2.tgp
  annotations: {}
    # kubernetes.io/ingress.class: "nginx"
    # kubernetes.io/tls-acme: "true"
  path: /
